#[test_only]
module payload_decoder::payload_decoder_tests;

use payload_decoder::payload_decoder;
use sui::bcs::{Self, BCS};

#[test]
fun test_payload_decoder() {
    let payload = x"f2e73f7c0000000000000000000000000000000000000000000000000000000000aa36a70000000000000000000000000f90793a54e809bf708bd0fbcc63d311e3bb1be100000000000000000000000000000000000000000000000000000000000059d85a7c1a028fe68c29a449a6d8c329b9bdd39d8b925ba0f8abbde9fe398430fac40000000000000000000000000000000000000000000000000000000000000000";

    let (action, to_chain, recipient, amount, txid, vout) = payload_decoder::decode(payload);
    assert!(action == 4075241340);
    assert!(to_chain == 11155111);
    assert!(recipient.to_bytes() == x"0000000000000000000000000f90793a54e809bf708bd0fbcc63d311e3bb1be1");
    assert!(amount == 23000);
    assert!(bcs::to_bytes(&txid) == x"c4fa308439fee9bdabf8a05b928b9dd3bdb929c3d8a649a4298ce68f021a7c5a");
    assert!(vout == 0);
}

#[test]
fun test_signature_decoder() {
    let signatures = x"00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000040486dbc2308c3722c280a96a421e48d8c984bca9f48868e280ce1c8b1b08238cd671de8b18dd200053aef1727a80e83171805da0013c1b6d1ff28c5abfd73d7950000000000000000000000000000000000000000000000000000000000000040ae04a516c2a64625d865cf5cc9134aad909f20bed93ddf7ea8a440b6ea4bf9ae5b40bce9a00cfd157985ac61bbb56833e61b8e81018c5e1b52172f110e23e3fa0000000000000000000000000000000000000000000000000000000000000040e474e99a95f80a6f84fd659bcf5d158e027f06eed692f90a92c5b0154aec14c91a9555d2b3162125118e8b264c2b43e041f8cc9091ce45cc35d2fd8acf3fc295";
    let payload = x"f2e73f7c0000000000000000000000000000000000000000000000000000000000aa36a70000000000000000000000000f90793a54e809bf708bd0fbcc63d311e3bb1be100000000000000000000000000000000000000000000000000000000000059d85a7c1a028fe68c29a449a6d8c329b9bdd39d8b925ba0f8abbde9fe398430fac40000000000000000000000000000000000000000000000000000000000000000";
    let hash = x"f5638b4d4846c87bc4d9647a13af858401ac6b30469c61dd894eb05344ef8c6b";
    let signers = vector[x"027378e006183e9a5de1537b788aa9d107c67189cd358efc1d53a5642dc0a37311", x"03ac2fec1927f210f2056d13c9ba0706666f333ed821d2032672d71acf47677eae", x"02b56056d0cb993765f963aeb530f7687c44d875bd34e38edc719bb117227901c5"];

    let signatures = payload_decoder::decode_signatures(signatures);
    assert!(payload_decoder::validate_signatures(signers, signatures, payload, hash));
}
